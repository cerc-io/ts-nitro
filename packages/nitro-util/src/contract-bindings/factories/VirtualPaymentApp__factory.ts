/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  VirtualPaymentApp,
  VirtualPaymentAppInterface,
} from "../VirtualPaymentApp";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "participants",
            type: "address[]",
          },
          {
            internalType: "uint64",
            name: "channelNonce",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "appDefinition",
            type: "address",
          },
          {
            internalType: "uint48",
            name: "challengeDuration",
            type: "uint48",
          },
        ],
        internalType: "struct INitroTypes.FixedPart",
        name: "fixedPart",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "asset",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "enum ExitFormat.AssetType",
                        name: "assetType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "metadata",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct ExitFormat.AssetMetadata",
                    name: "assetMetadata",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "destination",
                        type: "bytes32",
                      },
                      {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint8",
                        name: "allocationType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "metadata",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct ExitFormat.Allocation[]",
                    name: "allocations",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ExitFormat.SingleAssetExit[]",
                name: "outcome",
                type: "tuple[]",
              },
              {
                internalType: "bytes",
                name: "appData",
                type: "bytes",
              },
              {
                internalType: "uint48",
                name: "turnNum",
                type: "uint48",
              },
              {
                internalType: "bool",
                name: "isFinal",
                type: "bool",
              },
            ],
            internalType: "struct INitroTypes.VariablePart",
            name: "variablePart",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "signedBy",
            type: "uint256",
          },
        ],
        internalType: "struct INitroTypes.RecoveredVariablePart[]",
        name: "proof",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "asset",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "enum ExitFormat.AssetType",
                        name: "assetType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "metadata",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct ExitFormat.AssetMetadata",
                    name: "assetMetadata",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "destination",
                        type: "bytes32",
                      },
                      {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint8",
                        name: "allocationType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "metadata",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct ExitFormat.Allocation[]",
                    name: "allocations",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct ExitFormat.SingleAssetExit[]",
                name: "outcome",
                type: "tuple[]",
              },
              {
                internalType: "bytes",
                name: "appData",
                type: "bytes",
              },
              {
                internalType: "uint48",
                name: "turnNum",
                type: "uint48",
              },
              {
                internalType: "bool",
                name: "isFinal",
                type: "bool",
              },
            ],
            internalType: "struct INitroTypes.VariablePart",
            name: "variablePart",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "signedBy",
            type: "uint256",
          },
        ],
        internalType: "struct INitroTypes.RecoveredVariablePart",
        name: "candidate",
        type: "tuple",
      },
    ],
    name: "requireStateSupported",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class VirtualPaymentApp__factory {
  static readonly abi = _abi;
  static createInterface(): VirtualPaymentAppInterface {
    return new utils.Interface(_abi) as VirtualPaymentAppInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VirtualPaymentApp {
    return new Contract(address, _abi, signerOrProvider) as VirtualPaymentApp;
  }
}
